apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: customer-apps-with-secrets
  namespace: argocd
  labels:
    app.kubernetes.io/name: customer-apps-with-secrets
    type: secure-deployment
spec:
  generators:
    - git:
        repoURL: http://172.27.161.37:7990/scm/test/customer-configs.git
        revision: main
        files:
          # Matches: customers/customer-01/product-a/values.yaml
          - path: customers/*/*/values.yaml
  template:
    metadata:
      name: '{{path[1]}}-{{path[2]}}-secure'
      labels:
        product: '{{path[2]}}'
        customer: '{{path[1]}}'
        security: enabled
    spec:
      project: default
      sources:
        # Main application from infrastructure repo
        - repoURL: http://172.27.161.37:7990/scm/test/platform-infrastructure.git
          targetRevision: main
          path: products/{{path[2]}}
          helm:
            valueFiles:
              - $values/products/{{path[2]}}/base-values.yaml
              - $values/customers/{{path[1]}}/{{path[2]}}/values.yaml
        # Customer configs including secrets
        - repoURL: http://172.27.161.37:7990/scm/test/customer-configs.git
          targetRevision: main
          ref: values
        # Secrets as separate manifests (SOPS encrypted or Sealed Secrets)
        - repoURL: http://172.27.161.37:7990/scm/test/customer-configs.git
          targetRevision: main
          path: customers/{{path[1]}}/{{path[2]}}
          directory:
            include: secrets.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{path[1]}}-{{path[2]}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      # Optional: Use Vault or External Secrets Operator
      plugin:
        name: argocd-vault-plugin
        env:
          - name: AVP_TYPE
            value: vault
          - name: AVP_AUTH_TYPE
            value: k8s
